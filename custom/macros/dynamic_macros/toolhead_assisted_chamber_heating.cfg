# TA = Toolhead-Assisted
# ================================
# ORCHESTRATOR
# ================================
[gcode_macro TA_CHAMBER_HEAT]
description: Stage heat/airflow, then loop full mixing patterns until chamber reaches target
gcode:
  {% set vars =  printer["gcode_macro _PRINTER_VARS"] %}
  {% set chamber_target_c = params.TARGET_CHAMBER_TEMP|default(vars.default_chamber_target)|float %}
  {% set bed_target_c     = params.BED_TEMP|default(105)|float %}
  {% set hotend_target_c  = params.EXTRUDER_TEMP|default(vars.extruder_temp)|float %}
  {% set pattern_param    = params.PATTERN|default("auto")|lower %}
  {% set interval_ms      = (params.INTERVAL_MS|default(vars.chamber_status_interval|default(2))|float * 1000)|int %}

  {% set sensor_name = vars.chamber_sensor_name if vars.chamber_sensor_name is defined else "chamber" %}
  {% set sensor_key  = "temperature_sensor " ~ sensor_name %}
  {% if chamber_target_c <= 0 or sensor_key not in printer %}
    {action_raise_error("Chamber sensor missing or TARGET<=0 (sensor='" ~ sensor_key ~ "')")}
  {% endif %}

  MAYBE_HOME

  RESPOND MSG="Chamber heat: pattern={pattern_param}, target={chamber_target_c}°C"
  M140 S{bed_target_c}
  M104 S{hotend_target_c}
  CHAMBER_FANS_ON
  G90
  ; Lift to requested mixing height (worker will clamp if needed)
  G1 Z{vars.chamber_printhead_height|float} F{(vars.z_travel_speed*60)|int}
  M106 S{(255 * vars.chamber_printhead_fan_speed|float)|int}
  SET_DYNAMIC_VARIABLE MACRO=TA_CHAMBER_STATE VARIABLE=stop VALUE=0

  ; Hand off — worker derives bounds/center/speeds each cycle
  TA_CHAMBER_CYCLE SENSOR="{sensor_key}" TARGET={chamber_target_c} PATTERN="{pattern_param}" INTERVAL_MS={interval_ms} BED_TARGET={bed_target_c} HOTEND_TARGET={hotend_target_c}

[gcode_macro TA_CHAMBER_STOP]
gcode:
  SET_DYNAMIC_VARIABLE MACRO=TA_CHAMBER_STATE VARIABLE=stop VALUE=1

[gcode_macro TA_CHAMBER_STATE]
variable_stop: 0
gcode:
    RESPOND MSG="{stop}"

[gcode_macro TA_CHAMBER_CYCLE]
description: One full mixing pattern, wait, then re-call until chamber reaches target
gcode:
  {% set vars = printer["gcode_macro _PRINTER_VARS"] %}

  ; Inputs that truly need passing
  {% set sensor_key      = params.SENSOR %}
  {% set target_c        = params.TARGET|float %}
  {% set pattern_name    = params.PATTERN|lower %}
  {% set wait_ms         = params.INTERVAL_MS|int %}
  {% set bed_target_c    = params.BED_TARGET|float %}
  {% set hotend_target_c = params.HOTEND_TARGET|float %}

  ; Early stop hook
  {% set S = printer["gcode_macro TA_CHAMBER_STATE"] if "gcode_macro TA_CHAMBER_STATE" in printer else None %}
  {% if S and S.stop|int == 1 %}
    TURN_PART_COOLING_FAN_OFF
    RESPOND MSG="Chamber mixing aborted by user"
  {% else %}
    ; Live chamber check (start of cycle)
    {% set at_target = (sensor_key in printer) and (printer[sensor_key].temperature|float >= target_c) %}
    {% if at_target %}
      M190 S{bed_target_c}
      M109 S{hotend_target_c}
      TURN_PART_COOLING_FAN_OFF
      RESPOND MSG="Chamber reached {target_c|round(1)}°C — mixing complete"
    {% else %}
      ; ---- derive motion from printer every cycle ----
      {% set x_min = printer.toolhead.axis_minimum.x|float %}
      {% set x_max = printer.toolhead.axis_maximum.x|float %}
      {% set y_min = printer.toolhead.axis_minimum.y|float %}
      {% set y_max = printer.toolhead.axis_maximum.y|float %}
      {% set bed_avg = ((x_max - x_min) + (y_max - y_min)) / 2.0 %}

      {% if bed_avg >= 400 %}
        {% set move_speed_mmps = vars.chamber_move_speed_fast|float %}
        {% set bed_margin = 40 %}
      {% elif bed_avg >= 300 %}
        {% set move_speed_mmps = vars.chamber_move_speed_medium|float %}
        {% set bed_margin = 30 %}
      {% else %}
        {% set move_speed_mmps = vars.chamber_move_speed_slow|float %}
        {% set bed_margin = 20 %}
      {% endif %}
      {% set F = (move_speed_mmps * 60)|int %}

      {% set safe_x_min = x_min + bed_margin %}
      {% set safe_x_max = x_max - bed_margin %}
      {% set safe_y_min = y_min + bed_margin %}
      {% set safe_y_max = y_max - bed_margin %}
      {% set cx = (x_min + x_max)/2.0 %}
      {% set cy = (y_min + y_max)/2.0 %}

      {% set z_req = vars.chamber_printhead_height|float %}
      {% set z_lo  = printer.toolhead.axis_minimum.z|float + 2 %}
      {% set z_hi  = printer.toolhead.axis_maximum.z|float - 2 %}
      {% set mix_z = z_req %}
      {% if mix_z > z_hi %}{% set mix_z = z_hi %}{% endif %}
      {% if mix_z < z_lo %}{% set mix_z = z_lo %}{% endif %}

      ; ---- run one full pattern ----
      G90
      G1 Z{mix_z} F{F}

      {% if pattern_name == "grid" %}
        {% set gx0=safe_x_min %}{% set gx1=(safe_x_min+safe_x_max)/2 %}{% set gx2=safe_x_max %}
        {% set gy0=safe_y_min %}{% set gy1=(safe_y_min+safe_y_max)/2 %}{% set gy2=safe_y_max %}
        G1 X{gx0} Y{gy0} F{F}  ; row 0
        G4 P200
        G1 X{gx1} Y{gy0} F{F}
        G4 P200
        G1 X{gx2} Y{gy0} F{F}
        G4 P200
        G1 X{gx0} Y{gy1} F{F}  ; row 1
        G4 P200
        G1 X{gx1} Y{gy1} F{F}
        G4 P200
        G1 X{gx2} Y{gy1} F{F}
        G4 P200
        G1 X{gx0} Y{gy2} F{F}  ; row 2
        G4 P200
        G1 X{gx1} Y{gy2} F{F}
        G4 P200
        G1 X{gx2} Y{gy2} F{F}
        G4 P200
      {% elif pattern_name == "corners" %}
        G1 X{safe_x_min} Y{safe_y_min} F{F}
        G4 P350
        G1 X{safe_x_max} Y{safe_y_min} F{F}
        G4 P350
        G1 X{safe_x_max} Y{safe_y_max} F{F}
        G4 P350
        G1 X{safe_x_min} Y{safe_y_max} F{F}
        G4 P350
        G1 X{cx} Y{cy} F{F}
        G4 P250
      {% elif pattern_name == "vortex" %}
        {% set max_r = (safe_x_max - cx) if (safe_x_max - cx) < (safe_y_max - cy) else (safe_y_max - cy) %}
        {% for s in [1.0,0.75,0.5,0.25] %}
          {% set R = s*max_r %}
          G1 X{cx + R}          Y{cy}            F{F}
          G1 X{cx + R*0.707}    Y{cy + R*0.707}  F{F}
          G1 X{cx}              Y{cy + R}        F{F}
          G1 X{cx - R*0.707}    Y{cy + R*0.707}  F{F}
          G1 X{cx - R}          Y{cy}            F{F}
          G1 X{cx - R*0.707}    Y{cy - R*0.707}  F{F}
          G1 X{cx}              Y{cy - R}        F{F}
          G1 X{cx + R*0.707}    Y{cy - R*0.707}  F{F}
        {% endfor %}
      {% else %}  ; continuous (default)
        G1 X{safe_x_min} Y{safe_y_min} F{F}
        G1 X{safe_x_max} Y{safe_y_min} F{F}
        G1 X{safe_x_max} Y{safe_y_max} F{F}
        G1 X{safe_x_min} Y{safe_y_max} F{F}
        G1 X{safe_x_min} Y{safe_y_min} F{F}
        G1 X{cx}         Y{safe_y_min} F{F}
        G1 X{cx}         Y{safe_y_max} F{F}
        G1 X{cx}         Y{cy}         F{F}
        G1 X{safe_x_min} Y{cy}         F{F}
        G1 X{safe_x_max} Y{cy}         F{F}
        G1 X{cx}         Y{cy}         F{F}
        G1 X{cx}         Y{safe_y_min} F{F}
      {% endif %}

      ; ---- pace then recurse ----
      G4 P{wait_ms}
      TA_CHAMBER_CYCLE SENSOR="{sensor_key}" TARGET={target_c} PATTERN="{pattern_name}" INTERVAL_MS={wait_ms} BED_TARGET={bed_target_c} HOTEND_TARGET={hotend_target_c}
    {% endif %}
  {% endif %}