# =====================
# PREHEAT (uses material presets + dynamic chamber handling)
# =====================
[gcode_macro PREHEAT]
description: Preheat bed/hotend, manage chamber fans based on material
gcode:
  {% set vars = printer["gcode_macro _PRINTER_VARS"] %}
  {% set bed_temp = params.BED_TEMP|default(0)|float %}
  {% set extruder_temp = params.HOTEND_TEMP|default(vars.default_chamber_assist_extruder_temp)|float %}
  {% set chamber_target_temp = params.TARGET_CHAMBER_TEMP|default(0)|float %}
  {% set default_material = vars.default_material %}
  {% set material = params.MATERIAL|default(default_material) %}
  {% set quick = params.QUICK|default(0)|int %}

  {% if "MATERIAL" not in params %}
    RESPOND TYPE=error MSG="PREHEAT recommends passing in MATERIAL. Falling back to stored material - {material}."
  {% endif %}
  
  # Chamber assist logic (derived)
  {% set assist_threshold = vars.chamber_assist_temp|float %}
  {% set assist = 1 if bed_temp >= assist_threshold else 0 %}

  # Decide dynamic chamber mode
  {% set high_temp_materials = vars.high_temp_materials.split(",") %}
  {% set use_dynamic_heating = 1 if (material in high_temp_materials or bed_temp >= vars.high_temp_threshold|float) else 0 %}
  {% if quick == 1 %}
    {% set use_dynamic_heating = 0 %}
  {% endif %}

  RESPOND MSG="PREHEAT → bed_temp:{bed_temp}C Hotend:{extruder_temp}C Material:{material}"

  # Kick off heaters
  M140 S{bed_temp}
  {% if extruder_temp > 0 %}
    M104 S{extruder_temp}
  {% endif %}

  # Manage chamber & assist fans during preheat
  {% if use_dynamic_heating %}
      TA_CHAMBER_HEAT TARGET_CHAMBER_TEMP={chamber_target_temp} BED_TEMP={bed_temp} EXTRUDER_TEMP={extruder_temp}
  {% else %}
    {% if assist == 1 %}
      CHAMBER_FANS_ON
    {% else %}
      CHAMBER_FANS_OFF
    {% endif %}
  {% endif %}

  # Wait to target temps if requested (QUICK=0)
  {% if quick == 0 %}
    {% if bed_temp > 0 %} M190 S{bed_temp} {% endif %}
    {% if extruder_temp > 0 %} M109 S{extruder_temp} {% endif %}
  {% endif %}

  # Optional soak
  {% set warp_list = vars.warp_prone_materials.split(",") %}
  {% set mins = (vars.high_temp_heat_soak_time if material in warp_list or bed_temp >= vars.high_temp_threshold|float else vars.standard_heat_soak_time)|int %}
  {% if quick == 0 and mins > 0 %}
    RESPOND MSG="Heat soak: {mins} minutes"
    G4 P{mins * 60 * 1000}
  {% endif %}

    RESPOND MSG="PREHEAT complete."


# =====================
# COOLDOWN_SEQUENCE (adds explicit hotend-off guard; no duplicate M84)
# =====================
[gcode_macro COOLDOWN_SEQUENCE]
description: Cooldown with or without chamber wait.  Quick codes: 0 = quick cooldown, 1 = standard stepped cooldown
variable_target_chamber: 35
gcode:
	  {% set svv = printer.save_variables.variables %}
    {% set vars = printer["gcode_macro _PRINTER_VARS"] %}
    {% set material = svv.current_material | string|upper  %}
    {% set warp_materials = vars.warp_prone_materials|string|upper %}
    {% set target_chamber = params.TARGET_CHAMBER|default(35)|float %}
    {% set bed_temp = printer.heater_bed.temperature %}
    {% set filter_delayed_stop_duration = 300|int %}

    {% set needs_controlled_cooldown = True if material in warp_materials else False %}
    {% set quick = params.QUICK|default(1)|int %}
    RESPOND MSG="Starting Cooldown sequence!"
    M104 S0  # Extruder off

      {% if not needs_controlled_cooldown or quick == 0 %}
        {% if not needs_controlled_cooldown %}
            RESPOND MSG="Material '{material}' doesn't warp - skipping controlled cooldown"
        {% else %}
            RESPOND MSG="Quick cooldown selected - skipping controlled cooldown"
        {% endif %}

        # Quick shutdown
        M140 S0  # bed_temp off immediately

        # Run filter for a few minutes to clear any fumes
        {% if vars.filter != "" %}
            RESPOND MSG="Running filtration for 3 minutes..."
            UPDATE_DELAYED_GCODE ID=FILTER_DELAYED_STOP DURATION=180
        {% endif %}

        ALL_FANS_OFF
        RESPOND MSG="Quick cooldown complete for {material}"

    {% else %}
        # Controlled cooldown for warp-prone materials (ABS/ASA/PC/NYLON)
        RESPOND MSG="Starting controlled cooldown for {material} (prevents warping)"
        RESPOND MSG="Chamber: temp → {target_chamber}C (bed_temp: {bed_temp}C)"

        # Chamber fans off except for filter
        TURN_PART_COOLING_FAN_OFF
        CHAMBER_HEATING_FANS_OFF 


        # Gradual bed cooldown to prevent warping
        {% if bed_temp > 60 %}
            RESPOND MSG="Gradual bed cooldown (warp prevention for {material})"
            {% set cooldown_steps = [(bed_temp * 0.8)|int, (bed_temp * 0.5)|int, 40] %}

            {% for temp in cooldown_steps %}
                RESPOND MSG="Bed cooling to {temp}C..."
                M190 S{temp}
                RESPOND MSG="Waiting for 60 sec at {temp}C..."
                G4 S60  # Wait 1 min at each step after bed has reached cooldown temp
            {% endfor %}

            M140 S0  # turn off bed
        {% endif %}

        RESPOND MSG="Bed cooldown complete. Running the filter for an additional {filter_delayed_stop_duration} minutes."
        UPDATE_DELAYED_GCODE ID=FILTER_DELAYED_STOP DURATION={filter_delayed_stop_duration}

        ALL_FANS_OFF
        TURN_OFF_HEATERS

        RESPOND MSG="Controlled cooldown complete for {material}!"
    {% endif %}