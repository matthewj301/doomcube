[delayed_gcode INIT_PRINTER]
initial_duration: 2
gcode:
    RESET_TO_START_STATE

[gcode_macro RESET_MULTIPLIERS]
gcode:
    RESPOND MSG="Resetting multipliers to 100%."
    M220 S100
    M221 S100

[gcode_macro RESET_SAVED_VARS]
gcode:
      RESPOND MSG="Setting saved vars to pre-print state."
      SAVE_VARIABLE VARIABLE=is_printing_gcode VALUE=False
      SAVE_VARIABLE VARIABLE=current_material VALUE='"None"'

[gcode_macro RESET_TO_START_STATE]
description: resets saved variables back to start state
gcode:
    RESPOND MSG="Resetting printer to pre-print state."
    RESET_MULTIPLIERS
    RESET_SAVED_VARS

[gcode_macro MAYBE_LOAD_SKEW_CORRECTION]
gcode:
    RESPOND MSG="Attempting to load skew correction"
    {% if "skew_correction" in printer.configfile.settings %}
      SKEW_PROFILE LOAD=default
        RESPOND MSG="Skew correction profile 'default' loaded"
    {% endif %}

[gcode_macro DISABLE_XY]
gcode:
    RESPOND MSG="Disabling XY motors"
    {% if "stepper_x" in printer.configfile.settings %} SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=0 {% endif %}
    {% if "stepper_x1" in printer.configfile.settings %} SET_STEPPER_ENABLE STEPPER=stepper_x1 ENABLE=0 {% endif %}
    {% if "stepper_y" in printer.configfile.settings %} SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=0 {% endif %}
    {% if "stepper_y1" in printer.configfile.settings %} SET_STEPPER_ENABLE STEPPER=stepper_y1 ENABLE=0 {% endif %}


[gcode_macro DISABLE_ALL_MOTORS]
gcode:
    RESPOND MSG="Disabling all motors"
    M84  # All Motors off

[gcode_macro TURN_OFF_HEATERS]
rename_existing: TURN_OFF_HEATERS_BASE
gcode:
      RESPOND MSG="Turning off all heaters"
      TURN_OFF_HEATERS_BASE


[gcode_macro _FALLBACK_PURGE]
variable_length: 25
variable_speed: 10
gcode:
  {% set L = params.LENGTH|default(length)|float %}
  {% set vars =  params.SPEED|default(speed)|float %}
  {% set f = (V * 60)|int %}
  _GET_BED_BOUNDS
  {% set x0 = printer["gcode_macro _GET_BED_BOUNDS"].min_x + 2 %}
  {% set y0 = printer["gcode_macro _GET_BED_BOUNDS"].min_y + 2 %}
  G90
  G1 X{x0} Y{y0} F{f}
  G1 E{L/5.0} F{(5*60)}
  G1 X{x0 + L} F{f}
  G92 E0

[idle_timeout]
gcode:
  {% set svv = printer.save_variables.variables %}
  {% set is_printing_gcode = svv.is_printing_gcode %}
  {% if is_printing_gcode %}
    {action_respond_info("Idle Timeout Reached: Cancelling Print")}
    CANCEL_PRINT
  {% else %}
    {action_respond_info("Idle Timeout Reached: Steppers and Heaters powered down")}
    TURN_OFF_HEATERS ; Builtin kalico macro
    DISABLE_ALL_MOTORS
  {% endif %}
[gcode_macro ECHO_CUSTOM_VARS]
description: Echo custom variables to the console.
gcode:
  {% for var, value in printer["gcode_macro CustomVariables"].items() %}
    {action_respond_info(var ~ ": " ~ value)}
  {% endfor %}

[gcode_macro ECHO_MMU_VARS]
description: Echo MMU variables to the console for debugging.
gcode:
  {% for var, value in printer["gcode_macro _MMU_Variables"].items() %}
    {action_respond_info(var ~ ": " ~ value)}
  {% endfor %}


[gcode_macro CHECK_FILAMENT_TYPE]
description: Custom gcode that runs right after the bed has reached temp, before the internal PREHEAT_EXTRUDER
gcode:
  {% set FILAMENT_TYPE = printer["gcode_macro CustomVariables"].filament_type %}
  CLEAR_PAUSE

  {% if FILAMENT_TYPE == "not_set" %}
    RESPOND MSG="filament_type not set by slicer, aborting print..."
    CANCEL_PRINT
  {% else %}
    RESPOND MSG="FILAMENT TYPE SET: {FILAMENT_TYPE}"
  {% endif %}